<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
		PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<setting name="logImpl" value="LOG4J"></setting>
		
		<!-- 
			指定MyBatis应如何自动映射列到字段或属性：
			NONE 表示取消自动映射；
			PARTIAL(默认) 只会自动映射没有定义嵌套结果集映射的结果集。 
			FULL 会自动映射任意复杂的结果集（无论是否嵌套）
		-->
		<setting name="autoMappingBehavior" value="PARTIAL"/>
		
		<!-- 
			全局属性mapUnderscoreToCamelCase ，通过配置这个属性为true(默认为false)可以自动将以下画线方式命名的数据库列映射到Java对象的驼峰式命名属性中 
			例如：数据库表中列名user_name，Java对象的属性名userName。
		-->
		<setting name="mapUnderscoreToCamelCase" value="false"/>
		
		<!-- 设置为true任意延迟属性的调用会使带有延迟加载属性的对象完整加载，反之false，每种属性都将按需加载。 -->
		<setting name="aggressiveLazyLoading" value="false"/>
		
		<!-- 己经将aggressiveLazyLoading设置为false，但是有些时候还是需要在触发某方法时将所有的懒加载的数据都加载进来，可以使用下面这个属性 -->
		<setting name="lazyLoadTriggerMethods" value="equals"/>
		
		<!-- 
			MyBatis二级缓存配置（sqlSessionFactory缓存）的全局开关，默认为true，若配置为false则二级缓存不被启用；
			二级缓存适合命名空间绑定的，即二级缓存需要配置在Mapper.xml或Mapper.java中
		-->
		<setting name="cacheEnabled" value="false"/>
		
	</settings>
</configuration>
